setSettings() {\r\n\t\t\tthis.actions = [];\r\n\t\t\t//lets build a new  action list from the axes\r\n\t\t\tthis.move.axes.forEach(axis => {\r\n\t\t\t\tthis.actions.push(this.buildAction(`${axis.letter}+`, commandType.move));\r\n\t\t\t\tthis.actions.push(this.buildAction(`${axis.letter}-`, commandType.move));\r\n\t\t\t});\r\n\r\n\t\t\t//Add some default commands we'll handle\r\n\t\t\tthis.actions.push(this.buildAction('Home X', commandType.gcode, 'G28 X'));\r\n\t\t\tthis.actions.push(this.buildAction('Home Y', commandType.gcode, 'G28 Y'));\r\n\t\t\tthis.actions.push(this.buildAction('Home Z', commandType.gcode, 'G28 Z'));\r\n\t\t\tthis.actions.push(this.buildAction('Home All', commandType.gcode, 'G28'));\r\n\t\t\tthis.actions.push(this.buildAction('Step +', commandType.plugin, 'step+'));\r\n\t\t\tthis.actions.push(this.buildAction('Step -', commandType.plugin, 'step-'));\r\n\t\t\tthis.actions.push(this.buildAction('Feed Rate +', commandType.plugin, 'feed+'));\r\n\t\t\tthis.actions.push(this.buildAction('Feed Rate -', commandType.plugin, 'feed-'));\r\n\t\t\tthis.actions.push(this.buildAction('Set Zero', commandType.gcode, 'G92 X0 Y0 Z0'));\r\n\t\t\tthis.saveSettings();\r\n\t\t\tthis.showResetDialog = false;\r\n\t\t},\r\n\t\tclearAction(action) {\r\n\t\t\taction.control = '';\r\n\t\t\taction.key = '';\r\n\t\t},\r\n\t\tloadSettings() {\r\n\t\t\t//Check for saved settings\r\n\t\t\tlet actionsString = localStorage.getItem('joggerSettings');\r\n\t\t\tif (actionsString) {\r\n\t\t\t\tthis.actions = JSON.parse(actionsString);\r\n\t\t\t} else {\r\n\t\t\t\tthis.resetSettings();\r\n\t\t\t}\r\n\t\t},\r\n\t\tsaveSettings() {\r\n\t\t\tlocalStorage.setItem('joggerSettings', JSON.stringify(this.actions));\r\n\t\t},\r\n\t\tgenerateGCodeMoveCommand(moves) {\r\n\t\t\t/*\r\n                        Maybe look into computing estimated time of completions for a move to smooth \r\n                        if (Date.now() - this.lastAction < 500) {\r\n                          return;\r\n                        }\r\n                        this.lastAction = Date.now();\r\n                        */\r\n\t\t\tif (this.moving) return; //discard any commands while moving\r\n\t\t\tthis.moving = true;\r\n\t\t\tlet moveCommands = '';\r\n\t\t\tmoves.forEach(axisAction => {\r\n\t\t\t\tvar axis = axisAction.action[0];\r\n\t\t\t\tvar direction = axisAction.action[1] === '+' ? '' : '-';\r\n\t\t\t\tvar move = `${direction}${this.stepValue}`;\r\n\t\t\t\tmoveCommands += ` ${axis}${move}`;\r\n\t\t\t});\r\n\t\t\tvar command = `M120\\nG91\\nG1 ${moveCommands.trim()} F${this.feedRateValue}\\nG90\\nM121`;\r\n\t\t\tif (this.debug) {\r\n\t\t\t\tconsole.log(command);\r\n\t\t\t} else {\r\n\t\t\t\tthis.sendCode(command);\r\n\t\t\t}\r\n\t\t\tthis.moving = false;\r\n\t\t},\r\n\t\tgenerateGCodeCommand(gcode) {\r\n\t\t\tif (this.moving || this.state.status !== 'idle') {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (this.debug) {\r\n\t\t\t\tconsole.log(gcode.command);\r\n\t\t\t} else {\r\n\t\t\t\tthis.moving = true;\r\n\t\t\t\tthis.sendCode(gcode.command);\r\n\t\t\t\tthis.moving = false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tperformPluginAction(action) {\r\n\t\t\tif (Date.now() - this.lastAction < 500) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.lastAction = Date.now();\r\n\r\n\t\t\tswitch (action.command) {\r\n\t\t\t\tcase 'step+':\r\n\t\t\t\t\tif (this.stepIndex < this.stepList.length - 1) {\r\n\t\t\t\t\t\tthis.stepIndex++;\r\n\t\t\t\t\t\tthis.sendCode(`M117 \"Jogger Step :  ${this.stepValue}\"`);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'step-':\r\n\t\t\t\t\tif (this.stepIndex > 0) {\r\n\t\t\t\t\t\tthis.stepIndex--;\r\n\t\t\t\t\t\tthis.sendCode(`M117 \"Jogger Step :  ${this.stepValue}\"`);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'feed+':\r\n\t\t\t\t\tif (this.feedRateIndex < this.feedRateList.length - 1) {\r\n\t\t\t\t\t\tthis.feedRateIndex++;\r\n\t\t\t\t\t\tthis.sendCode(`M117 \"Jogger Feed Rate :  ${this.feedRateList[this.feedRateIndex]}\"`);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'feed-':\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (this.feedRateIndex > 0) this.feedRateIndex--;\r\n\t\t\t\t\t\tthis.sendCode(`M117 \"Jogger Feed Rate :  ${this.feedRateList[this.feedRateIndex]}\"`);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t\tcheckGamepad() {\r\n\t\t\t//check if gamepads are connected and update their current button/axis states\r\n\t\t\tvar gamepads = navigator.getGamepads ? navigator.getGamepads() : navigator.webkitGetGamepads ? navigator.webkitGetGamepads : [];\r\n\t\t\tif (gamepads.length > 0 && gamepads[0]) {\r\n\t\t\t\tthis.gamepadName = gamepads[0].id;\r\n\r\n\t\t\t\tlet gamepad = gamepads[0]; //we'll just work with the first controller that is detected for now.\r\n\r\n\t\t\t\t//Collection of all the buttons/axes activated on this frame\r\n\t\t\t\tthis.activeControls = [];\r\n\r\n\t\t\t\t//Get a collection of pushed buttons\r\n\t\t\t\tgamepad.buttons.forEach((b, i) => {\r\n\t\t\t\t\tif (this.buttonPressed(b)) {\r\n\t\t\t\t\t\tthis.activeControls.push(`B${i}`);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\t//Check the axes controls to see if they exceed threshold\r\n\t\t\t\tthis.activeAxes = '';\r\n\t\t\t\tgamepad.axes.forEach((axis, index) => {\r\n\t\t\t\t\tif (1 - Math.abs(axis) < 0.5) {\r\n\t\t\t\t\t\tlet sign = axis > 0 ? '+' : '-';\r\n\t\t\t\t\t\tthis.activeControls.push(`A${index}${sign}`);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\t//Clear all of the actions from the last pass\r\n\t\t\t\tthis.actions.forEach(a => (a.pressed = false));\r\n\r\n\t\t\t\t//check if we are setting a control\r\n\t\t\t\tif (this.settingAction && this.activeControls.length > 0) {\r\n\t\t\t\t\tthis.settingAction.control = this.activeControls[0];\r\n\t\t\t\t\tthis.settingAction = null;\r\n\t\t\t\t\tthis.showSetAction = false;\r\n\t\t\t\t\tthis.saveSettings();\r\n\t\t\t\t} else if (this.activeControls.length > 0) {\r\n\t\t\t\t\t//Perform activated actions\r\n\t\t\t\t\tlet firedActions = new Array();\r\n\t\t\t\t\t//get a list of fired commands\r\n\t\t\t\t\tthis.activeControls.forEach(control => {\r\n\t\t\t\t\t\tfiredActions.push(...this.actions.filter(action => action.control === control));\r\n\t\t\t\t\t});\r\n\t\t\t\t\tfiredActions.forEach(a => (a.pressed = true));\r\n\t\t\t\t\tif (this.debug) {\r\n\t\t\t\t\t\tconsole.log(firedActions);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.fireActions(firedActions);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tfireActions(firedActions) {\r\n\t\t\tif (!this.enabled) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tlet moves = firedActions.filter(act => act.type === commandType.move);\r\n\t\t\tif (moves.length > 0) {\r\n\t\t\t\tthis.generateGCodeMoveCommand(moves);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tlet gcode = firedActions.filter(act => act.type === commandType.gcode || act.type === commandType.custom);\r\n\t\t\tif (gcode.length > 0) {\r\n\t\t\t\t//for now we'll only allow one gcode command to be fired;\r\n\t\t\t\tthis.generateGCodeCommand(gcode[0]);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tlet plugins = firedActions.filter(act => act.type === commandType.plugin);\r\n\t\t\tif (plugins.length > 0) {\r\n\t\t\t\tthis.performPluginAction(plugins[0]); //only do the first command\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t},\r\n\t\taddCustomAction(action, command) {\r\n\t\t\tthis.actions.push(this.buildAction(action, commandType.custom, command));\r\n\t\t\tthis.saveSettings();\r\n\t\t\tthis.newEntry.action = '';\r\n\t\t\tthis.newEntry.command = '';\r\n\t\t\tthis.addNewItem = false;\r\n\t\t},\r\n\t\tremoveCustomAction(index) {\r\n\t\t\tthis.actions.splice(index, 1);\r\n\t\t\tthis.saveSettings();\r\n\t\t},\r\n\t},\r\n};\r\n</script>\r\n\r\n<style>\r\n.action-control {\r\n\tbackground-color: transparent;\r\n\t-webkit-transition-duration: 0.3s;\r\n\t-moz-transition-duration: 0.3s;\r\n\t-o-transition-duration: 0.3s;\r\n\ttransition-duration: 0.3s;\r\n}\r\n\r\n.action-pressed {\r\n\tbackground-color: blue;\r\n}\r\n\r\n.cell-right {\r\n\ttext-align: right;\r\n}\r\n</style>","'use strict'\r\nimport { registerRoute } from '../../routes';\r\nimport Jogger from './Jogger.vue';\r\n\r\nregisterRoute(Jogger, {\r\n  Settings: {\r\n    Jogger: {\r\n      icon: 'mdi-gamepad-variant',\r\n      caption: 'Jogger',\r\n      path: '/Jogger',\r\n    },\r\n  },\r\n});\r\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('div',[_vm._v(\"Gamepad Name : \"+_vm._s(_vm.gamepadName))]),_c('div',[_c('v-switch',{attrs:{\"inset\":\"\",\"label\":\"Enable\"},model:{value:(_vm.enabled),callback:function ($$v) {_vm.enabled=$$v},expression:\"enabled\"}})],1),_c('v-row',[_c('v-col',{attrs:{\"cols\":\"6\"}},[_vm._v(\" Steps\"),_c('br'),_c('v-btn-toggle',{attrs:{\"mandatory\":\"\",\"exclusive\":\"\"},model:{value:(_vm.stepIndex),callback:function ($$v) {_vm.stepIndex=$$v},expression:\"stepIndex\"}},_vm._l((_vm.stepList),function(step){return _c('v-btn',{key:step},[_vm._v(\" \"+_vm._s(step))])}),1)],1),_c('v-col',{attrs:{\"cols\":\"6\"}},[_vm._v(\" Feed Rate (mm/s)\"),_c('br'),_c('v-btn-toggle',{attrs:{\"mandatory\":\"\",\"exclusive\":\"\"},model:{value:(_vm.feedRateIndex),callback:function ($$v) {_vm.feedRateIndex=$$v},expression:\"feedRateIndex\"}},_vm._l((_vm.feedRateList),function(rate){return _c('v-btn',{key:rate},[_vm._v(\" \"+_vm._s(rate))])}),1)],1)],1),_c('v-simple-table',[_c('thead',[_c('tr',[_c('td',[_c('h2',[_vm._v(\"Configuration\")])]),_c('td',{staticClass:\"cell-right\",attrs:{\"colspan\":\"4\"}},[_c('v-btn',{staticClass:\"mr-2\",on:{\"click\":function($event){_vm.addNewItem = true}}},[_vm._v(\"New Action\")]),_c('v-btn',{attrs:{\"color\":\"red\"},on:{\"click\":function($event){_vm.showResetDialog = true}}},[_vm._v(\"Reset\")])],1)]),_c('tr',[_c('th',[_vm._v(\"Action\")]),_c('th',[_vm._v(\"Set\")]),_c('th',[_vm._v(\"Configure\")]),_c('th',[_vm._v(\"Custom Command\")]),_c('th',[_vm._v(\"Controller Button Id\")]),_c('th',[_vm._v(\"Keyboard Key\")])])]),_c('tbody',_vm._l((_vm.actions),function(action,index){return _c('tr',{key:index,staticClass:\"action-control\",class:{'action-pressed' : action.pressed}},[_c('td',[_vm._v(_vm._s(action.action))]),_c('td',[_vm._v(_vm._s(_vm.isActionSet(action)))]),_c('td',[_c('v-btn',{staticClass:\"mr-1\",attrs:{\"color\":\"info\"},on:{\"click\":function($event){return _vm.setActionDialog(action)}}},[_vm._v(\"Set\")]),_c('v-btn',{staticClass:\"mr-1\",attrs:{\"color\":\"warning\"},on:{\"click\":function($event){return _vm.clearAction(action)}}},[_vm._v(\"Clear\")]),_c('v-btn',{directives:[{name:\"show\",rawName:\"v-show\",value:(action.type === 3),expression:\"action.type === 3\"}],attrs:{\"color\":\"error\"},on:{\"click\":function($event){return _vm.removeCustomAction(index)}}},[_vm._v(\"Delete\")])],1),_c('td',[_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(action.type === 3),expression:\"action.type === 3\"}]},[_vm._v(_vm._s(action.command))])]),_c('td',[_vm._v(_vm._s(action.control))]),_c('td',[_vm._v(_vm._s(action.key))])])}),0)]),_c('v-dialog',{attrs:{\"max-width\":\"325\"},model:{value:(_vm.showSetAction),callback:function ($$v) {_vm.showSetAction=$$v},expression:\"showSetAction\"}},[_c('v-card',[_c('v-card-title',[_vm._v(\"Set Action\")]),_c('v-card-text',[_vm._v(\"Press a button or move an axis to set value\")]),_c('v-card-actions',[_c('v-btn',{on:{\"click\":function($event){_vm.showSetAction = !_vm.showSetAction}}},[_vm._v(\"Cancel\")])],1)],1)],1),_c('v-dialog',{attrs:{\"max-width\":\"325\"},model:{value:(_vm.showResetDialog),callback:function ($$v) {_vm.showResetDialog=$$v},expression:\"showResetDialog\"}},[_c('v-card',{attrs:{\"max-width\":\"325\",\"outlined\":\"\"}},[_c('v-card-title',[_vm._v(\"Reset Settings\")]),_c('v-card-text',[_vm._v(\"Click reset to confirm reset.\")]),_c('v-card-actions',[_c('v-btn',{attrs:{\"color\":\"red\",\"width\":\"150\"},on:{\"click\":_vm.resetSettings}},[_vm._v(\"Reset\")]),_vm._v(\" \"),_c('v-btn',{attrs:{\"color\":\"info\",\"width\":\"150\"},on:{\"click\":function($event){_vm.showResetDialog = false}}},[_vm._v(\"Cancel\")])],1)],1)],1),_c('v-dialog',{attrs:{\"max-width\":\"325\"},model:{value:(_vm.addNewItem),callback:function ($$v) {_vm.addNewItem=$$v},expression:\"addNewItem\"}},[_c('v-card',[_c('v-card-title',[_vm._v(\"Add New Action\")]),_c('v-card-text',[_c('v-form',[_c('v-text-field',{attrs:{\"label\":\"Action Name\"},model:{value:(_vm.newEntry.action),callback:function ($$v) {_vm.$set(_vm.newEntry, \"action\", $$v)},expression:\"newEntry.action\"}}),_c('v-textarea',{attrs:{\"label\":\"Command\",\"auto-grow\":\"\",\"filled\":\"\"},model:{value:(_vm.newEntry.command),callback:function ($$v) {_vm.$set(_vm.newEntry, \"command\", $$v)},expression:\"newEntry.command\"}}),_c('v-btn',{on:{\"click\":function($event){return _vm.addCustomAction(_vm.newEntry.action, _vm.newEntry.command)}}},[_vm._v(\"Save\")]),_c('v-btn',{on:{\"click\":function($event){_vm.addNewItem = false}}},[_vm._v(\"Close\")])],1)],1)],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"],"names":["component","render","staticRenderFns","commandType","plugin","gcode","move","custom","data","actions","enabled","gamepadName","activeControls","showSetAction","settingAction","moving","showResetDialog","debug","stepList","stepIndex","feedRateList","feedRateIndex","addNewItem","newEntry","action","command","lastAction","inputHasFocus","lastKeyPress","created","window","addEventListener","checkKeyPress","document","inputFocused","inputBlurred","beforeDestroy","removeEventListener","computed","mapState","stepValue","feedRateValue","mounted","loadSettings","setInterval","checkGamepad","unmounted","clearInterval","methods","mapActions","buildAction","type","control","pressed","key","evt","saveSettings","Date","now","forEach","firedAction","filter","fireActions","setTimeout","isActionSet","buttonPressed","b","setActionDialog","resetSettings","axes","axis","push","letter","clearAction","actionsString","localStorage","getItem","JSON","parse","setItem","stringify","generateGCodeMoveCommand","moves","moveCommands","axisAction","direction","trim","console","log","sendCode","generateGCodeCommand","state","status","performPluginAction","length","gamepads","navigator","getGamepads","webkitGetGamepads","id","gamepad","buttons","i","activeAxes","index","Math","abs","sign","a","firedActions","Array","act","plugins","addCustomAction","removeCustomAction","splice","registerRoute","Jogger","Settings","icon","caption","path","attrs","_v","model","value","callback","_vm","$$v","expression","staticClass","_c","on","class","directives","name","rawName","$event","$set"],"sourceRoot":""}{"version":3,"file":"js/GamepadJogger.78aac7fc.js","mappings":"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","sources":["webpack://duetwebcontrol/./src/plugins/GamepadJogger/Jogger.vue?1bc9","webpack://duetwebcontrol/./src/plugins/GamepadJogger/Jogger.vue?0950","webpack://duetwebcontrol/src/plugins/GamepadJogger/Jogger.vue","webpack://duetwebcontrol/./src/plugins/GamepadJogger/index.js","webpack://duetwebcontrol/./src/plugins/GamepadJogger/Jogger.vue"],"sourcesContent":["import { render, staticRenderFns } from \"./Jogger.vue?vue&type=template&id=59bbce00&\"\nimport script from \"./Jogger.vue?vue&type=script&lang=js&\"\nexport * from \"./Jogger.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Jogger.vue?vue&type=style&index=0&id=59bbce00&prod&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Jogger.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Jogger.vue?vue&type=script&lang=js&\"","<template>\r\n    <div>\r\n        <div>Gamepad Name : {{gamepadName}}</div>\r\n        <div>\r\n            <v-switch inset v-model=\"enabled\" label=\"Enable\"></v-switch>\r\n        </div>\r\n        <v-row>\r\n            <v-col cols=\"6\">\r\n                Steps<br />\r\n                <v-btn-toggle mandatory exclusive v-model=\"stepIndex\">\r\n                    <v-btn v-for=\"step in stepList\" :key=\"step\"> {{step}}</v-btn>\r\n                </v-btn-toggle>\r\n            </v-col>\r\n            <v-col cols=\"6\">\r\n                Feed Rate (mm/s)<br />\r\n                <v-btn-toggle mandatory exclusive v-model=\"feedRateIndex\">\r\n                    <v-btn v-for=\"rate in feedRateList\" :key=\"rate\"> {{rate}}</v-btn>\r\n                </v-btn-toggle>\r\n            </v-col>\r\n        </v-row>\r\n        <v-simple-table>\r\n            <thead>\r\n                <tr>\r\n                    <td><h2>Configuration</h2></td>\r\n                    <td colspan=\"4\" class=\"cell-right\">\r\n                        <v-btn class=\"mr-2\" @click=\"addNewItem = true\">New Action</v-btn>\r\n                        <v-btn @click=\"showResetDialog = true\" color=\"red\">Reset</v-btn>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <th>Action</th>\r\n                    <th>Set</th>\r\n                    <th>Configure</th>\r\n                    <th>Custom Command</th>\r\n                    <th>Controller Button Id</th>\r\n                    <th>Keyboard Key</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr v-for=\"(action,index) in actions\" :key=\"index\" class=\"action-control\" :class=\"{'action-pressed' : action.pressed}\">\r\n                    <td>{{action.action}}</td>\r\n                    <td>{{ isActionSet(action) }}</td>\r\n                    <td>\r\n                        <v-btn class=\"mr-1\" @click=\"setActionDialog(action)\" color=\"info\">Set</v-btn>\r\n                        <v-btn @click=\"clearAction(action)\" color=\"warning\" class=\"mr-1\">Clear</v-btn>\r\n                        <v-btn v-show=\"action.type === 3\" @click=\"removeCustomAction(index)\" color=\"error\">Delete</v-btn>\r\n                    </td>\r\n                    <td>\r\n                        <span v-show=\"action.type === 3\">{{action.command}}</span>\r\n                    </td>\r\n                    <td>{{action.control}}</td>\r\n                    <td>{{action.key}}</td>\r\n                </tr>\r\n            </tbody>\r\n        </v-simple-table>\r\n        <v-dialog v-model=\"showSetAction\" max-width=\"325\">\r\n            <v-card>\r\n                <v-card-title>Set Action</v-card-title>\r\n                <v-card-text>Press a button or move an axis to set value</v-card-text>\r\n                <v-card-actions> <v-btn @click=\"showSetAction = !showSetAction\">Cancel</v-btn> </v-card-actions>\r\n            </v-card>\r\n        </v-dialog>\r\n        <v-dialog v-model=\"showResetDialog\" max-width=\"325\">\r\n            <v-card max-width=\"325\" outlined>\r\n                <v-card-title>Reset Settings</v-card-title>\r\n                <v-card-text>Click reset to confirm reset.</v-card-text>\r\n                <v-card-actions> <v-btn @click=\"resetSettings\" color=\"red\" width=\"150\">Reset</v-btn> <v-btn color=\"info\" @click=\"showResetDialog = false\" width=\"150\">Cancel</v-btn> </v-card-actions>\r\n            </v-card>\r\n        </v-dialog>\r\n        <v-dialog v-model=\"addNewItem\" max-width=\"325\">\r\n            <v-card>\r\n                <v-card-title>Add New Action</v-card-title>\r\n                <v-card-text>\r\n                    <v-form>\r\n                        <v-text-field v-model=\"newEntry.action\" label=\"Action Name\"></v-text-field>\r\n                        <v-textarea v-model=\"newEntry.command\" label=\"Command\" auto-grow filled></v-textarea>\r\n                        <v-btn @click=\"addCustomAction(newEntry.action, newEntry.command)\">Save</v-btn>\r\n                        <v-btn @click=\"addNewItem = false\">Close</v-btn>\r\n                    </v-form>\r\n                </v-card-text>\r\n            </v-card>\r\n        </v-dialog>\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport { mapActions, mapState } from 'vuex';\r\n\r\nlet commandType = {\r\n\tplugin: 0, //Plugin commands perform an action that drives a chance in the plugin itself like steps or feedrate\r\n\tgcode: 1, //GCode command sends gcode to the duet\r\n\tmove: 2, //Move  commands require processing to add steps and feedrate before being sent to duet\r\n\tcustom: 3, //Allow for user customized gcode macros to be attached to a button. A good example is running a macro with M98 P\"X\"\r\n};\r\n\r\nexport default {\r\n\tdata: function () {\r\n\t\treturn {\r\n\t\t\tactions: [],\r\n\t\t\tenabled: false,\r\n\t\t\tgamepadName: '',\r\n\t\t\tactiveControls: [],\r\n\t\t\tshowSetAction: false,\r\n\t\t\tsettingAction: null,\r\n\t\t\tmoving: false,\r\n\t\t\tshowResetDialog: false,\r\n\t\t\tdebug: false,\r\n\t\t\tstepList: [0.1, 1, 5, 10, 20, 50, 100],\r\n\t\t\tstepIndex: 2,\r\n\t\t\tfeedRateList: [1, 5, 15, 30, 60, 100],\r\n\t\t\tfeedRateIndex: 3,\r\n\t\t\taddNewItem: false,\r\n\t\t\tnewEntry: {\r\n\t\t\t\taction: '',\r\n\t\t\t\tcommand: '',\r\n\t\t\t},\r\n\t\t\tlastAction: 0,\r\n\t\t\tinputHasFocus: false,\r\n\t\t\tlastKeyPress: 0,\r\n\t\t};\r\n\t},\r\n\tcreated() {\r\n\t\twindow.addEventListener('keydown', this.checkKeyPress);\r\n\t\tdocument.addEventListener('focusin', this.inputFocused);\r\n\t\tdocument.addEventListener('focusout', this.inputBlurred);\r\n\t},\r\n\tbeforeDestroy() {\r\n\t\twindow.removeEventListener('keydown', this.checkKeyPress);\r\n\t\tdocument.removeEventListener('focusin', this.inputFocused);\r\n\t\tdocument.addEventListener('focusout', this.inputBlurred);\r\n\t},\r\n\tcomputed: {\r\n\t\t...mapState('machine/model', ['move', 'state']),\r\n\t\tstepValue() {\r\n\t\t\treturn this.stepList[this.stepIndex];\r\n\t\t},\r\n\t\tfeedRateValue() {\r\n\t\t\treturn this.feedRateList[this.feedRateIndex] * 60;\r\n\t\t},\r\n\t},\r\n\tmounted() {\r\n\t\tthis.loadSettings();\r\n\t\tsetInterval(this.checkGamepad, 100);\r\n\t},\r\n\tunmounted() {\r\n\t\tclearInterval(this.checkGamepad);\r\n\t},\r\n\tmethods: {\r\n\t\t...mapActions('machine', ['sendCode']),\r\n\t\tbuildAction(action, type, command) {\r\n\t\t\treturn {\r\n\t\t\t\taction: action,\r\n\t\t\t\tcontrol: '',\r\n\t\t\t\ttype: type,\r\n\t\t\t\tcommand: command,\r\n\t\t\t\tpressed: false,\r\n\t\t\t\tkey: '',\r\n\t\t\t};\r\n\t\t},\r\n\t\tinputFocused() {\r\n\t\t\tthis.inputHasFocus = true;\r\n\t\t},\r\n\t\tinputBlurred() {\r\n\t\t\tthis.inputHasFocus = false;\r\n\t\t},\r\n\t\tcheckKeyPress(evt) {\r\n\t\t\t//Check if we are setting a key\r\n\t\t\tif (this.showSetAction) {\r\n\t\t\t\tthis.settingAction.key = evt.key;\r\n\t\t\t\tthis.showSetAction = false;\r\n\t\t\t\tthis.saveSettings();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (!this.inputHasFocus && Date.now() - this.lastKeyPress > 100) {\r\n\t\t\t\tthis.lastKeyPress = Date.now();\r\n\r\n\t\t\t\tthis.actions.forEach(action => (action.pressed = false));\r\n\r\n\t\t\t\tlet firedAction = this.actions.filter(action => action.key === evt.key);\r\n\t\t\t\tfiredAction[0].pressed = true;\r\n\t\t\t\tthis.fireActions(firedAction);\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tthis.actions.forEach(action => (action.pressed = false));\r\n\t\t\t\t}, 90);\r\n\t\t\t}\r\n\t\t},\r\n\t\tisActionSet(action) {\r\n\t\t\treturn action.control !== '' || action.key !== '';\r\n\t\t},\r\n\t\tbuttonPressed(b) {\r\n\t\t\tif (typeof b == 'object') {\r\n\t\t\t\treturn b.pressed;\r\n\t\t\t}\r\n\t\t\treturn b == 1.0;\r\n\t\t},\r\n\t\tsetActionDialog(action) {\r\n\t\t\tthis.settingAction = action;\r\n\t\t\tthis.showSetAction = true;\r\n\t\t},\r\n\t\tre